"use strict";class AC{constructor(e){this.id=e.id,this.zone=e.zone,this.on=e.on,this.name=e.name||"AC",this.temp=e.temp||23,this.fan=e.fan||0,this.swing=e.swing||0,this.mode=e.mode||0,this.elem=el('<div class="btn ac"><div class="label"></div><div class="up"></div><div class="temp"></div><div class="down"></div><div class="acfan"></div><div class="swing"></div><div class="mode"></div></div>'),this.elem.querySelector(".label").textContent=this.name,e.on&&this.elem.classList.add("on"),this.elements={main:void 0,temp:void 0,fan:void 0,swing:void 0,mode:void 0},this.elements.temp=this.elem.querySelector(".temp"),this.elem.querySelector(".up").addEventListener("click",this.temperature_up.bind(this),!1),this.elem.querySelector(".down").addEventListener("click",this.temperature_down.bind(this),!1),this.elements.fan=this.elem.querySelector(".acfan"),this.elements.fan.addEventListener("click",this.fan_change.bind(this),!1),this.elements.swing=this.elem.querySelector(".swing"),this.elements.swing.addEventListener("click",this.swing_change.bind(this),!1),this.elements.mode=this.elem.querySelector(".mode"),this.elements.mode.addEventListener("click",this.mode_change.bind(this),!1),this.elem.addEventListener("click",this.changeState.bind(this),!1),this.renderStatus()};changeState(){this.on=!this.on,this.renderStatus()};temperature_up(e){e.stopPropagation(),this.temp++,this.temp>25?this.temp=25:this.renderStatus()};temperature_down(e){e.stopPropagation(),this.temp--,this.temp<18?this.temp=18:this.renderStatus()};fan_change(e){e.stopPropagation(),this.fan=!this.fan,this.renderStatus()}swing_change(e){e.stopPropagation(),this.swing=!this.swing,this.renderStatus()}mode_change(e){e.stopPropagation(),this.mode=!this.mode,this.renderStatus()}renderStatus(){this.elements.temp.innerText=this.temp,this.setStatus(this.elem,this.on),this.setStatus(this.elements.fan,0!=this.fan),this.setStatus(this.elements.swing,0!=this.swing),this.elements.mode.innerText=0==this.mode?"cool":"heat"}setStatus(e,t){t?e.classList.add("on"):e.classList.remove("on")}}const scenes={NORMAL:0,GOODBYE:1,SLEEP:2,DRAGON:3,WELCOME:4},devType={undefined:0,light:1,env:2,fan:3,ac:4,bell:5},zones={server:0,living:1,suite:2,office:3,kitchen:4,door:5,outside:6},tasks={not_defined:0,request_update:1,update_device:2,set_device:3,play_scene:4,set_scene:5,rf_send:6,ir_send:7,rf_query:8,scene_pause:9,set_on:10,fan_on:11,fan_speed:12},enumToString=(e,t)=>{for(const s in e)if(t==e[s])return s},devices={list:[{id:0,name:"server_node",type:0,on:0,val:0,zone:0,elem:void 0},{id:1,name:"server_rf",room:0,val:0}],byZone:e=>{let t=[];for(const s of devices.list)s.zone==e&&t.push(s);return t},byId:e=>{for(const t of devices.list)if(t.id==e)return t},setup:()=>api.getDeviceList().then(devices._setup_post),_setup_post:e=>{for(const t of e.devs)switch(t.type){case devType.light:devices.list.push(new Light(t));break;case devType.fan:devices.list.push(new Fan(t));break;case devType.env:devices.list.push(new Environment(t));break;case devType.ac:devices.list.push(new AC(t))}return devices.list}};let main={currentScene:scenes.NORMAL,lastUpdate:0,serverapi:"http://hauskontrol.local/api"};class Environment{constructor(e){this.id=e.id,this.zone=e.zone,this.on=e.on,this.name=e.name||"Environment",this.temp=e.temp,this.humidity=e.humidity,this.pressure=e.pressure,this.light=e.light,this.elem=el('<div class="btn env"><div class="temp"></div><div class="humidity"></div><div class="pressure"></div><div class="light"></div></div>'),this.tempElem=this.elem.querySelector(".temp"),this.humidityElem=this.elem.querySelector(".humidity"),this.pressureElem=this.elem.querySelector(".pressure"),this.lightElem=this.elem.querySelector(".light"),this.renderStatus()}renderStatus(){this.tempElem.textContent=this.temp,this.humidityElem.textContent=this.humidity,this.pressureElem.textContent=this.pressure,this.lightElem.textContent=this.light}changeState(){this.on=!this.on,this.on?this.elem.classList.add("on"):this.elem.classList.remove("on"),api.addTask(tasks.set_device,this.id,this.on?1:0)}}class Fan{constructor(e){this.id=e.id,this.zone=e.zone,this.on=e.on,this.name=e.name||"Fan",this.elem=el('<div class="btn fan"><div>fan</div><div class="up"></div><div class="speed"><span>-</span></div><div class="down"></div></div>'),this.speedMax=4,this.speedMin=1,this.speed=e.speed,this.speedElem=this.elem.querySelector(".speed span"),this.renderStatus(),this.elem.querySelector(".up").addEventListener("click",this.speedUp.bind(this),!1),this.elem.querySelector(".down").addEventListener("click",this.speedDown.bind(this),!1),this.elem.addEventListener("click",this.changeOnState.bind(this),!1)}renderStatus(){this.on?this.elem.classList.add("on"):this.elem.classList.remove("on"),this.speedElem.textContent=this.speed}speedUp(e){e.stopPropagation(),this.speed++,this.speed>this.speedMax&&(this.speed=this.speedMax),this.renderStatus(),api.addTask(tasks.fan_speed,this.id,this.speed)}speedDown(e){e.stopPropagation(),this.speed--,0==this.speed&&this.on&&this.changeOnState(),this.speed<this.speedMin&&(this.speed=this.speedMin),this.renderStatus(),api.addTask(tasks.fan_speed,this.id,this.speed)}changeOnState(e){this.on=!this.on,this.renderStatus(),api.addTask(tasks.set_on,this.id,this.on?1:0)}}class Light{constructor(e){this.id=e.id,this.zone=e.zone,this.on=e.on,this.name=e.name||"Light",this.elem=el('<div class="btn light"></div>'),this.elem.textContent="light["+this.id+"]",e.on&&this.elem.classList.add("on"),this.elem.addEventListener("click",this.changeState.bind(this),!0)}changeState(){this.on=!this.on,this.on?this.elem.classList.add("on"):this.elem.classList.remove("on"),api.addTask(tasks.set_device,this.id,this.on?1:0)}}const rooms={wrapper:void 0,selected:0,list:[{id:1,name:"living",selected:!1,elem:void 0},{id:2,name:"suite"},{id:3,name:"office"},{id:4,name:"kitchen"}],setup:()=>{rooms.wrapper=document.querySelector("div.wrapper>div.rooms");for(const e of rooms.list){let t=document.createElement("div");t.className=e.name,t.innerText=e.label||e.name||"room",t.addEventListener("click",()=>rooms.select(e.id),!0),e.elem=t,rooms.wrapper.appendChild(e.elem)}rooms.select(rooms.list[0].id)},select:e=>{if(e==rooms.selected)return;rooms.selected=e,rooms.wrapper.querySelectorAll(".on").forEach(e=>e.classList.remove("on")),rooms.list.find(t=>t.id==e).elem.classList.add("on");const t=document.querySelector("div.panel");t.innerHTML="",devices.byZone(e).forEach(e=>{e.elem&&t.appendChild(e.elem)})}},el=e=>{return(new DOMParser).parseFromString(e,"text/html").body.firstChild},api={_fetch:async(e="",t="POST",s)=>{const i="http://192.168.1.16/api"+e;let n=await fetch(i,{method:t,mode:"cors",cache:"default",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrer:"client",body:JSON.stringify(s)});return await n.json()},addTask:(e,t,s)=>api._fetch("/task","POST",{task:e,id:t,payload:s}),getDeviceList:()=>api._fetch().then(e=>e),link:()=>{}},ui={status:{elem:void 0,setup:()=>{ui.status.elem=document.querySelector("div.wrapper>div.status"),ui.status.elem&&ui.status.update()},update:()=>{var e=new Date,t=e.getMinutes();ui.status.elem.innerText=e.getHours()+(t<10?":0":":")+t,setTimeout(ui.status.update,6e4)}},weather:{setup:e=>(ui.weather.envId=31,ui.weather.elem=document.querySelector("div.wrapper>div.weather"),ui.weather.update(),e),update:()=>{const e=devices.byId(ui.weather.envId).elem;e.classList.add("weather"),ui.weather.elem.replaceWith(e)},envId:0,elem:void 0},setup:()=>{void 0!==devices&&void 0!==api&&void 0!==api?(devices.setup().then(ui.weather.setup).then(rooms.setup),ui.status.setup()):setTimeout(ui.setup,100)}};ui.setup();